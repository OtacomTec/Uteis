' What you see in this example will never reside in one place in the real world.
' This example illustrates how to use  the object, but in the reality the keys
' are generated by some special part of the application (their generation is
' extremely slow - keys longer than 2048 bits may take even more than a minute)
' Thus the keys most often act as a kind of a certificate (no matter if you follow
' a standard or your own way). So they need to be loaded in the corresponding properties
' and then the Encrypt/Decrypt operations can be performed.
' See the chapter "About the Public Key lgorithms" in NDL for detailed comments
' about how RSA is used.

Set rsa = CreateObject("newObjects.crypt.RSA")
Set su = CreateObject("newObjects.utilctls.StringUtilities")
rsa.CreateRandKeys 32, True
WScript.Echo "Keys in format: ( Modulus , key )"
' rsa.SecretExp = 50001
WScript.Echo "Private key: (" & su.BinToHex(rsa.Modulus) & " , " & su.BinToHex(rsa.SecretExp) & " )"
WScript.Echo "Public key: (" & su.BinToHex(rsa.Modulus) & " , " & su.BinToHex(rsa.PublicExp) & " )"
WScript.Echo "Modulus len: " & Len(su.BinToHex(rsa.Modulus))
WScript.Echo "P: " & su.BinToHex(rsa.P)
WScript.Echo "Q: " & su.BinToHex(rsa.Q)

' Test encryption
Wscript.Echo ""
Wscript.Echo "Test encryption ============="
binkey = su.HextoBin("46CFE34023FAD342987FEab6812ceda001234567890ABCDE")
Wscript.Echo "Encrypting AES Key(" & Len(su.BintoHex(binkey))/2 & "): " & su.BintoHex(binkey)
cipher = rsa.Encrypt(binkey)
Wscript.Echo "  Cipher(" & Len(su.BintoHex(cipher)) / 2 & "): " & su.BintoHex(cipher)
binkeydec = rsa.Decrypt(cipher)
Wscript.Echo "  Decrypted: " & su.BintoHex(binkeydec)

Wscript.Echo "Test encryption ============="
binkey = su.HextoBin("46CFE34023FAD342987FEab6812ceda001234567890ABCDE")
Wscript.Echo "Encrypting AES Key(" & Len(su.BintoHex(binkey))/2 & "): " & su.BintoHex(binkey)
cipher = rsa.Decrypt(binkey)
Wscript.Echo "  AntiCipher(" & Len(su.BintoHex(cipher)) / 2 & "): " & su.BintoHex(cipher)
binkeydec = rsa.Encrypt(cipher)
Wscript.Echo "  AntiEncrypted: " & su.BintoHex(binkeydec)
